---
# Create and Update Containser - include file

- name: Check whether container exists
  shell: "lxc list | grep {{ item }} | wc -l"
  register: lxc_list
  changed_when: "'1' not in lxc_list.stdout"

- name: Display message to stdout when creating a container
  debug:
    msg: "Creating new container"
  when: lxc_list.stdout != "1" 

- name: Create container if it does not exist
  lxd_container:
    name: "{{ item }}"
    state: started
    source:
      type: image
      mode: pull
      server: "{{ img_server }}"
      protocol: simplestreams # if you get a 404, try setting protocol: simplestreams
      alias: ubuntu/focal/amd64
    profiles: ["default"]
    wait_for_ipv4_addresses: true
    timeout: 600
    config:
      security.nesting: "true"
      security.privileged: "true"
  when: lxc_list.stdout != "1" 

- name: check python is installed in container
  delegate_to: "{{ item }}"
  raw: dpkg -s python2
  register: python_install_check
  failed_when: python_install_check.rc not in [0, 1]
  changed_when: false

- name: install python in container
  delegate_to: "{{ item }}"
  raw: apt-get install -y python
  when: python_install_check.rc == 1

- name: Display message to stdout when comtainer already exists
  debug:
    msg: "Container already exists, updating the container configuration file"
  when: lxc_list.stdout == "1"

- name: Container already exists so update the config
##  debug:
##    msg: "Container already exists"
  lxd_container:
    name: "{{ item }}"
    config:
      security.nesting: "true"
      security.privileged: "true"
  when: lxc_list.stdout == "1" 
